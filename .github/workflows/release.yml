name: Release

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version type to bump (patch, minor, major)'
        required: true
        default: 'patch'

jobs:
  release_version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Ensure the full history is fetched to push changes back

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '19'
      
      - name: Install dependencies and build
        run: |
          yarn install --frozen-lockfile
          yarn build
      
      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Create new version
        run: |
          node_modules/.bin/lerna version ${{ github.event.inputs.version_type }} --yes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Changelog
        run: |
          node_modules/.bin/lerna version ${{ github.event.inputs.version_type }} --yes --conventional-commits --changelog-preset angular
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Request approval to push to master branch
        if: github.event.approvals[0].conclusion == 'success'
        run: |
          echo "Requesting approval to push changes to master branch..."

      - name: Push changes to master branch
        run: |
          git push origin master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish_to_npm:
    needs: release_version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '19'

      - name: Publish to NPM
        run: npx lerna publish from-package --yes
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}