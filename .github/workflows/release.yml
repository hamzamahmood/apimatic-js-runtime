name: Release

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version type to bump (patch, minor, major)'
        required: true
        default: 'patch'

jobs:
  release_versioning:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: 0  # Ensure the full history is fetched to push changes back

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '19'
      
      - name: Install dependencies and build
        run: |
          yarn install --frozen-lockfile
          yarn build
      
      - name: Configure Git and create release branch for version update
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b ci-version-update
          git push origin ci-version-update
      
      - name: Lerna version
        run: |
          node_modules/.bin/lerna version ${{ github.event.inputs.version_type }} --yes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      # - name: Commit the version change
      #   if: steps.release.outputs.exit_code == 0
      #   uses: devops-infra/action-commit-push@master
      #   with:
      #      github_token: "${{ secrets.GITHUB_TOKEN }}"
      #      commit_message: "ci(release-version) update pom.xml [ci skip]"
      #      force: false
      #      target_branch: ci-version-update

  publish_to_npm:
    needs: release_versioning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ci-version-update

      - name: Push the version change
        if: steps.release.outputs.exit_code == 0
        uses: CasperWA/push-protected@v2
        with:
          #  token: ${{ secrets.PAT }}
           token: ${{ secrets.GITHUB_TOKEN }}
           branch: ${{ github.ref_name }}

      - name: Delete the intermediate branch
        if: steps.release.outputs.exit_code == 0
        run: |
           git branch -D ci-version-update &>/dev/null || true
           git push origin :ci-version-update &>/dev/null || true

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '19'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies and build
        run: |
          yarn install --frozen-lockfile
          yarn build

      - name: Publish to NPM
        run: node_modules/.bin/lerna publish from-package --yes
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}