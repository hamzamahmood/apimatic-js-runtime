name: Release seprate

on:
  workflow_dispatch:
    inputs:
      Package:
        description: "Select the package to release"
        required: true
        type: choice
        options:
          - authentication-adapters
          - axios-client-adapter
          - convert-to-stream
          - core
          - core-interfaces
          - file-wrapper
          - http-headders
          - http-query
          - oauth-adapters
          - schema
          - xml-adapter
      Version:
        description: "This input field requires version in format: x.y.z, where x => major version, y => minor version and z => patch version"
        required: true

jobs:
  build:
    name: Build and publish ${{ github.event.inputs.Package }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use Node 19.x
        uses: actions/setup-node@v1
        with:
          node-version: "19.x"

      - name: Install dependencies
        run: |
          npm install lerna@6.5.1 -g
          yarn install --frozen-lockfile
          yarn run build

      - name: Bump ${{ github.event.inputs.Package }} version
        run: |
          cd packages/${{ github.event.inputs.Package }}
          yarn version --no-git-tag-version --new-version ${{ github.event.inputs.Version }}
          cd ..
          cd ..

      - name: Configure NPM registry
        run: npm config set registry 'https://registry.npmjs.org/'

      - name: Authenticate with NPM
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Release to npm
        id: release
        run: |
          cd packages/${{ github.event.inputs.Package }}
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Update dependencies
        run: yarn workspaces foreach exec yarn upgrade @hamzamahmood/${{ github.event.inputs.Package }}@^${{ github.event.inputs.Version }}

      - name: Update package lock file
        run: yarn install

      - name: Commit the version change
        if: steps.release.outputs.exit_code == 0
        uses: devops-infra/action-commit-push@master
        with:
            github_token: "${{ secrets.GITHUB_TOKEN }}"
            commit_message: "ci(${{ github.event.inputs.Package }}): update package version"
            force: false
            target_branch: project-version-update

      - name: Push the version change
        if: steps.release.outputs.exit_code == 0
        uses: CasperWA/push-protected@v2
        with:
          token: ${{ secrets.PAT }}
          branch: ${{ github.ref_name }}

      - name: Delete the intermediate branch
        if: steps.release.outputs.exit_code == 0
        run: |
            git branch -D project-version-update &>/dev/null || true
            git push origin :project-version-update &>/dev/null || true

      - name: Create tag
        if: steps.release.outputs.exit_code == 0
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.PAT }}
          custom_tag: ${{ github.event.inputs.Version }}
          tag_prefix: ${{ github.event.inputs.Package }}@

      - name: Create changelog for the release
        if: steps.release.outputs.exit_code == 0
        uses: ncipollo/release-action@v1
        with: 
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ github.event.inputs.Package }} Version ${{ github.event.inputs.Version }}
          body: ${{ steps.tag_version.outputs.changelog }}
          path: 'packages/${{ github.event.inputs.Package }}'
